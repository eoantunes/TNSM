import geopy.distance as d
import numpy as np
# Clientes
M = [(-20.15731, -44.15946),
(-20.1569, -44.15937),
(-20.15769, -44.1592),
(-20.158, -44.15811),
(-20.1574, -44.15834),
(-20.15653, -44.159),
(-20.15664, -44.15853),
(-20.15606, -44.15879),
(-20.15599, -44.15935),
(-20.15521, -44.15936),
(-20.15467, -44.15955),
(-20.15406, -44.15963),
(-20.15439, -44.15859),
(-20.15358, -44.1593),
(-20.15292, -44.15943),
(-20.15252, -44.15915),
(-20.15286, -44.15789),
(-20.15352, -44.15802),
(-20.15378, -44.15743),
(-20.15427, -44.15698),
(-20.15477, -44.15675),
(-20.15362, -44.15506),
(-20.1553, -44.15624),
(-20.15512, -44.15547),
(-20.15499, -44.15443),
(-20.15471, -44.15382),
(-20.15431, -44.15328),
(-20.15396, -44.15451),
(-20.15395, -44.15406),
(-20.15354, -44.15367),
(-20.15329, -44.15324),
(-20.15377, -44.15299),
(-20.15332, -44.15271),
(-20.15278, -44.15275),
(-20.15268, -44.15206),
(-20.15235, -44.15143),
(-20.15233, -44.15093),
(-20.15166, -44.14879),
(-20.15205, -44.14854),
(-20.15194, -44.14807),
(-20.15176, -44.14752),
(-20.15155, -44.14708),
(-20.15134, -44.14656),
(-20.15115, -44.14851),
(-20.15078, -44.14829),
(-20.15036, -44.14802),
(-20.15, -44.14786),
(-20.14974, -44.14742),
(-20.15089, -44.14626),
(-20.15051, -44.1461),
(-20.1501, -44.14584),
(-20.14948, -44.14551),
(-20.14942, -44.14708),
(-20.14918, -44.14669),
(-20.14906, -44.14634),
(-20.14883, -44.14616),
(-20.14862, -44.14598),
(-20.1483, -44.14573),
(-20.14808, -44.14548),
(-20.14907, -44.14541),
(-20.14777, -44.14537),
(-20.14741, -44.14523),
(-20.14714, -44.14509),
(-20.14693, -44.14485),
(-20.14666, -44.1448),
(-20.14639, -44.14494),
(-20.14643, -44.14479),
(-20.14619, -44.14511),
(-20.14584, -44.14523),
(-20.14593, -44.14511),
(-20.14387, -44.14628),
(-20.14371, -44.14605),
(-20.14347, -44.14587),
(-20.14351, -44.14557),
(-20.14347, -44.14523),
(-20.14324, -44.14487),
(-20.14332, -44.145),
(-20.14084, -44.14454),
(-20.14058, -44.14469),
(-20.14035, -44.14473),
(-20.14009, -44.14478),
(-20.13982, -44.14483),
(-20.13971, -44.14498),
(-20.1395, -44.14526),
(-20.13952, -44.14507),
(-20.14102, -44.14249),
(-20.14044, -44.14259),
(-20.14029, -44.14236),
(-20.1407, -44.14261),
(-20.13648, -44.14242),
(-20.13624, -44.14184),
(-20.13599, -44.14133),
(-20.13593, -44.14115),
(-20.13602, -44.14098),
(-20.13617, -44.14039),
(-20.13462, -44.1442),
(-20.13416, -44.1443),
(-20.13381, -44.14451),
(-20.13357, -44.14473),
(-20.13316, -44.14507),
(-20.13316, -44.1449),
(-20.13258, -44.14013),
(-20.13214, -44.13977),
(-20.13351, -44.14081),
(-20.13525, -44.13862),
(-20.13521, -44.13781),
(-20.13867, -44.13231),
(-20.13918, -44.13201),
(-20.13971, -44.13189),
(-20.14087, -44.13008),
(-20.14181, -44.13086),
(-20.14258, -44.13005),
(-20.14292, -44.12986),
(-20.14299, -44.12936),
(-20.141, -44.12774),
(-20.14111, -44.12721),
(-20.14122, -44.12751),
(-20.14093, -44.1269),
(-20.14362, -44.12825),
(-20.1436, -44.12724),
(-20.14315, -44.12705),
(-20.14232, -44.12626),
(-20.14251, -44.12648),
(-20.14106, -44.125),
(-20.14065, -44.12436),
(-20.1385, -44.12374),
(-20.13834, -44.12351),
(-20.13835, -44.12332),
(-20.13826, -44.12315),
(-20.13808, -44.12295),
(-20.13787, -44.12272),
(-20.13766, -44.12249),
(-20.13732, -44.12216),
(-20.13701, -44.12191),
(-20.13674, -44.12169),
(-20.13647, -44.12151),
(-20.1362, -44.12133),
(-20.13589, -44.12125),
(-20.13548, -44.12127),
(-20.13485, -44.12116),
(-20.1346, -44.1213),
(-20.13422, -44.12155),
(-20.13395, -44.12166),
(-20.13365, -44.12166),
(-20.13345, -44.12177),
(-20.13324, -44.12188),
(-20.13313, -44.12207),
(-20.13286, -44.12222),
(-20.1325, -44.1222),
(-20.132, -44.12225),
(-20.13175, -44.12209),
(-20.13152, -44.12222),
(-20.1313, -44.12238),
(-20.13095, -44.12266),
(-20.13059, -44.12288),
(-20.13026, -44.12302),
(-20.13008, -44.12348),
(-20.1299, -44.12373),
(-20.12966, -44.12417),
(-20.12938, -44.12435),
(-20.12934, -44.12477),
(-20.12942, -44.12495),
(-20.12924, -44.12457),
(-20.12793, -44.12559),
(-20.12706, -44.12574),
(-20.12624, -44.12589),
(-20.12995, -44.11991),
(-20.12905, -44.12008),
(-20.12562, -44.12131),
(-20.12503, -44.12192),
(-20.12225, -44.12666),
(-20.12212, -44.12618),
(-20.12213, -44.12571),
(-20.12221, -44.12514),
(-20.12232, -44.12388),
(-20.12219, -44.1234),
(-20.12261, -44.12326),
(-20.12227, -44.12263),
(-20.12203, -44.12176),
(-20.12424, -44.12229),
(-20.13235, -44.11841),
(-20.13314, -44.11785),
(-20.13387, -44.11535),
(-20.13397, -44.1147),
(-20.1345, -44.11419),
(-20.13481, -44.11414),
(-20.13518, -44.11414),
(-20.13542, -44.11415),
(-20.13555, -44.1142),
(-20.13561, -44.11434),
(-20.13587, -44.11439),
(-20.13603, -44.11452),
(-20.13616, -44.11467),
(-20.13637, -44.11516),
(-20.13647, -44.11567),
(-20.13647, -44.11704),
(-20.13765, -44.11924),
(-20.1391, -44.11912),
(-20.14081, -44.11793),
(-20.14189, -44.11884)]

N = [(-20.158987,-44.16044),
(-20.157972,-44.15757),
(-20.15507,-44.158234),
(-20.153089,-44.160246),
(-20.152102,-44.15368),
(-20.149807,-44.155217),
(-20.150678,-44.149011),
(-20.148752,-44.149671),
(-20.14704,-44.145669),
(-20.146177,-44.143204),
(-20.145099,-44.142436),
(-20.142831,-44.147017),
(-20.13997,-44.145622),
(-20.141037,-44.141372),
(-20.138919,-44.140434),
(-20.136909,-44.141566),
(-20.133458,-44.14526),
(-20.132299,-44.139144),
(-20.13435,-44.136481),
(-20.142932,-44.134894),
(-20.141492,-44.133884),
(-20.141924,-44.131644),
(-20.139435,-44.130265),
(-20.136363,-44.128381),
(-20.139989,-44.126617),
(-20.143112,-44.12484),
(-20.137512,-44.123739),
(-20.13496,-44.122514),
(-20.14416,-44.116922),
(-20.140586,-44.114865),
(-20.136699,-44.114693),
(-20.136376,-44.11301),
(-20.135076,-44.113357),
(-20.131099,-44.118172),
(-20.1307,-44.123206),
(-20.127073,-44.127105),
(-20.123265,-44.12692),
(-20.126232,-44.117439),
(-20.145979,-44.148186),
(-20.150508,-44.152034),
(-20.154835,-44.156757),
(-20.151895,-44.157802),
(-20.153466,-44.154529),
(-20.149098,-44.147153),
(-20.14151,-44.145378),
(-20.147822,-44.147631),
(-20.150152,-44.150688),
(-20.151752,-44.155675),
(-20.155218,-44.16021),
(-20.15406,-44.148731)]


#####   Matriz de conectividade entre as antenas   #####
a = np.zeros((len(N), len(N)))
for j in range(len(N)):
    for k in range(len(N)):
        a[j][k] = d.GeodesicDistance(N[j],N[k]).km
        if a[j][k] > 2:
            a[j][k] = 0
        else:
            a[j][k] = 1

#####   Matriz de conectividade entre as antenas e clientes   #####
c = np.zeros((len(M), len(N)))
b = np.zeros((len(M), len(N)))
for i in range(len(M)):
    for j in range(len(N)):
        c[i][j] = d.GeodesicDistance(M[i],N[j]).km
        if c[i][j] < 0.65:
            c[i][j] = 5
            b[i][j] = 1
        elif c[i][j] < 0.878:
            c[i][j] = 4
            b[i][j] = 1
        elif c[i][j] < 1.186:
            c[i][j] = 3
            b[i][j] = 1
        elif c[i][j] < 1.6:
            c[i][j] = 2
            b[i][j] = 1
        elif c[i][j] < 2:
            c[i][j] = 1
            b[i][j] = 1
        else:
            c[i][j] = 0


#####   Salva em ARQUIVO para outras anÃ¡lises   #####
c = np.asarray(c)

np.savetxt('matriz_C.txt', c, fmt="%d", delimiter=",")
